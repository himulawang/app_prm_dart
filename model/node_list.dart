/**
 * This script is generated by I Maker
 * DO NOT MODIFY!
 */

part of lib_app_prm_dart;

class NodeList extends IList {
  static String _delimiter = ':';
  NodeList(groupId) { _initPK([groupId]); }

  NodeList.filledMap(groupId, Map dataList) {
    _initPK([groupId]);

    dataList.forEach((String i, Node model) {
      if (model is! Node) return;
      _set(model);
    });
  }

  NodeList.filledList(groupId, List dataList) {
    _initPK([groupId]);

    dataList.forEach((Node model) {
      if (model is! Node) return;
      _set(model);
    });
  }

  void _initPK(List pk) => _pk = pk;

  void setPK(groupId) => _pk = [groupId];
  String getUnitedPK() {
    if (_pk.contains(null)) throw new IModelException(10021);
    return _pk.join(_delimiter);
  }

  Node get(id) => _list["${id}"];

  void fromList(List dataList, [bool changeUpdatedList = false]) {
    if (dataList is! List) throw new IModelException(10012);

    dataList.forEach((Map data) {
      Node model = new Node();
      model.fromList(data, changeUpdatedList);
      if (changeUpdatedList) {
        if (get(model.getUnitedChildPK()) == null) {
          add(model);
        } else {
          set(model);
        }
      } else {
        _set(model);
      }
    });
  }
  void fromFull(Map dataList, [bool changeUpdatedList = false]) {
    if (dataList is! Map) throw new IModelException(10013);

    dataList.forEach((String i, Map data) {
      Node model = new Node();
      model.fromFull(data, changeUpdatedList);
      if (changeUpdatedList) {
        if (get(model.getUnitedChildPK()) == null) {
          add(model);
        } else {
          set(model);
        }
      } else {
        _set(model);
      }
    });
  }
  void fromAbb(Map dataList, [bool changeUpdatedList = false]) {
    if (dataList is! Map) throw new IModelException(10014);

    dataList.forEach((String i, Map data) {
      Node model = new Node();
      model.fromAbb(data, changeUpdatedList);
      if (changeUpdatedList) {
        if (get(model.getUnitedChildPK()) == null) {
          add(model);
        } else {
          set(model);
        }
      } else {
        _set(model);
      }
    });
  }
}
